---
import type { GetStaticPaths } from "astro";
import PokemonMainLayout from "../../layouts/PokemonMainLayout.astro";
import PokemonCard from "../../components/pokemons/PokemonCard.astro";
import type { PokemonListResponse } from "../../interfaces/pokemon-list.response.interface";
import { Icon } from "astro-icon/components";
import Title from "@/components/shared/Title.astro";

export const getStaticPaths = (async () => {
  const resp = await fetch("https://pokeapi.co/api/v2/pokemon?limit=151");
  const pokemons = (await resp.json()) as PokemonListResponse;
  return pokemons.results.map((pokemon) => ({
    params: { name: pokemon.name },
    props: { url: pokemon.url },
  }));
}) satisfies GetStaticPaths;

const { name } = Astro.params;
const { url } = Astro.props;
const id = url.split("/").at(-2);
const audioSrc = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/${id}.ogg`;
const imageSrc = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`;
---

<PokemonMainLayout
  title=`Pokemon Page #${id} - ${name}`
  image={imageSrc}
  descritpion={`InformaciÃ³n sobre el pokemon ${name}`}
>
  <section class="flex flex-col items-center justify-center">
    <div class="flex flex-col ">
      <!-- <a href="/pokemons">Regresar</a> -->
      <button onclick="history.back()" class="bg-blue-500 py-1 px-2 self-start"
        >Regresar</button
      >
      <div class="flex justify-center items-center mt-2">
        <Title>{name}</Title>

        <button
          id="btn_favorite"
          data-name=`${name}`
          data-id=`${id}`
          class="ml-3"
        >
          <Icon name="heart-outline" size={35} color="red" data-heart-outline />
          <Icon
            name="heart-fill"
            size={35}
            color={"red"}
            class={"hidden"}
            data-heart-fill
          />
        </button>
      </div>
    </div>

    <PokemonCard name={name} url={url} isBig />

    <audio controls class="mt-2">
      <source src={audioSrc} type="audio/ogg" />
      No compoatible con el navegador
    </audio>
  </section>
</PokemonMainLayout>

<script>
  import type { FavoritePokemon } from "@/interfaces/favorite-pokemon.interface";

  let favoritePokemons: FavoritePokemon[] = JSON.parse(
    localStorage.getItem("favoritePokemons") ?? "[]",
  );

  document.addEventListener("astro:page-load", () => {
    const btnFavorite = document.querySelector(
      "#btn_favorite",
    ) as HTMLButtonElement;

    if (!btnFavorite) return;

    const isFavorite = favoritePokemons.some(
      (pokemon) => pokemon.id === btnFavorite.dataset.id,
    );

    const btnFavoriteHeartOutline = document.querySelector(
      "[data-heart-outline]",
    ) as HTMLButtonElement;
    const btnFavoriteHeartFill = document.querySelector(
      "[data-heart-fill]",
    ) as HTMLButtonElement;

    const name = btnFavorite.dataset.name;
    const id = btnFavorite.dataset.id;

    if (isFavorite) {
      btnFavoriteHeartOutline.classList.toggle("hidden");
      btnFavoriteHeartFill.classList.toggle("hidden");
    }

    const toggleFavoritePokemon = () => {
      if (!name || !id) return;

      if (isFavorite) {
        favoritePokemons = favoritePokemons.filter(
          (pokemon) => pokemon.id !== id,
        );
      } else {
        favoritePokemons = [...favoritePokemons, { name, id }];
      }
      localStorage.setItem(
        "favoritePokemons",
        JSON.stringify(favoritePokemons),
      );
    };

    btnFavorite.addEventListener("click", () => {
      btnFavoriteHeartOutline.classList.toggle("hidden");
      btnFavoriteHeartFill.classList.toggle("hidden");

      toggleFavoritePokemon();
    });

  });
</script>
